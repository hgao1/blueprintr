% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blueprint.R
\name{blueprint}
\alias{blueprint}
\title{Create a blueprint}
\usage{
blueprint(
  name,
  command,
  description = NULL,
  metadata = NULL,
  annotate = FALSE,
  metadata_file_type = c("csv"),
  metadata_file_name = name,
  metadata_directory = NULL,
  metadata_file_path = NULL,
  extra_steps = NULL,
  ...,
  class = character()
)
}
\arguments{
\item{name}{The name of the blueprint}

\item{command}{The code to build the target dataset}

\item{description}{An optional description of the dataset to be used for
codebook generation}

\item{metadata}{The associated variable metadata for this dataset}

\item{annotate}{If \code{TRUE}, during cleanup the metadata will "annotate"
the dataset by adding variable attributes for each metadata field to
make metadata provenance easier and responsive to code changes.}

\item{metadata_file_type}{The kind of metadata file. Currently only CSV.}

\item{metadata_file_name}{The file name for the metadata file. Defaults
to the name of the blueprint.}

\item{metadata_directory}{Where the metadata file will be stored. If the
option \code{blueprintr.use_local_metadata_path} is set to \code{TRUE}, then the
default location will be the folder where the blueprint script is
located. Otherwise, this will default to \code{here::here("blueprints")}}

\item{metadata_file_path}{Overrides the metadata file path generated by
\code{metadata_directory}, \code{name}, and \code{metadata_file_type} if not NULL.}

\item{extra_steps}{A \code{list()} of extra 'bpstep' objects, which add
extra targets to the workflow after the desired dataset has completed
its cleanup phase. Uses of this could include generating codebooks
or other reports based on the built data.
See \code{\link[=bp_add_bpstep]{bp_add_bpstep()}} for more details.}

\item{...}{Any other parameters and settings for the blueprint}

\item{class}{A subclass of blueprint capability, for future work}
}
\value{
A blueprint object
}
\description{
Create a blueprint
}
\section{Cleanup Tasks}{
blueprintr offers some post-check tasks that attempt to match datasets to the
metadata as much as possible. There are two default tasks that run:
\enumerate{
\item Reorders variables to match metadata order.
\item Drops variables marked with \code{dropped == TRUE} if the \code{dropped} variable
exists in the metadata.
}

The remaining tasks have to be enabled by the user:
\itemize{
\item If \code{labelled = TRUE} in the \code{blueprint()} command, all columns will be
converted to \link[haven:labelled]{labelled()} columns, provided that at
least the \code{description} field is filled in. If the \code{coding} column is
present in the metadata, then categorical levels as specified by a
\link[rcoder:coding]{coding()} will be added to the column as well. In case
the \code{description} field is used for detailed column descriptions, the
\code{title} field can be added to the metadata to act as short titles for the
columns.
}
}

